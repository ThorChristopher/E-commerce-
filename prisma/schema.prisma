// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String   @id @default(uuid())
  name          String
  price         Float
  originalPrice Float?
  discount      Int?
  category      String
  image         String
  images        String[] // Array of image URLs
  rating        Float?
  reviews       Int?
  brand         String?
  description   String
  specifications String[] // Array of specification strings
  inStock       Boolean  @default(true)
  stockCount    Int      @default(0)
  featured      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  orderItems    OrderItem[]

  @@map("products")
}

model Order {
  id          String      @id @default(uuid())
  userEmail   String
  userName    String?
  status      String      @default("pending")
  total       Float
  items       OrderItem[]
  shippingAddress Json?
  paymentMethod   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  lastLogin DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Settings {
  id        String   @id @default(uuid())
  key       String   @unique
  value     String   // JSON string for complex values
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("settings")
}
